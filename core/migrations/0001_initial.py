# Generated by Django 5.1.2 on 2024-10-11 19:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('distance_modifier', models.FloatField()),
                ('time_modifier', models.FloatField()),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('population', models.IntegerField()),
                ('soldiers', models.IntegerField()),
                ('money', models.FloatField()),
                ('food', models.FloatField()),
                ('metals', models.FloatField()),
                ('ruler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faction', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FactionKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowns', to='core.faction')),
                ('known', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowers', to='core.faction')),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('resource', models.CharField(choices=[('MT', 'Metal'), ('FD', 'Food')], max_length=2)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lands', to='core.faction')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_points', to='core.world')),
            ],
        ),
        migrations.AddField(
            model_name='faction',
            name='capital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capitals', to='core.land'),
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_time', models.DateTimeField(auto_now_add=True)),
                ('fly_time', models.FloatField()),
                ('message', models.CharField(max_length=200)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letters', to='core.faction')),
            ],
        ),
        migrations.CreateModel(
            name='Scout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_time', models.DateTimeField(auto_now_add=True)),
                ('return_time', models.DateTimeField()),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scouts', to='core.faction')),
            ],
        ),
        migrations.CreateModel(
            name='ScoutKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_time', models.FloatField()),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scouts_visited', to='core.land')),
                ('scout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scout_knowledge', to='core.scout')),
            ],
        ),
        migrations.AddField(
            model_name='faction',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factions', to='core.world'),
        ),
    ]
